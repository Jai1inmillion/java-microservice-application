pipeline {
  agent any

  environment {
    SONAR_URL = "http://34.201.116.83:9000"
    DOCKER_IMAGE = "jaihanspal/ultimate-cicd:${BUILD_NUMBER}"
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "iam-veeramalla"
  }

  stages {

    stage('Checkout') {
      steps {
        echo 'passed'
        // checkout([$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: 'https://github.com/Jai1inmillion/java-microservice-application.git']]])
      }
    }

    stage('Build and Test') {
      steps {
        powershell '''
          Get-ChildItem -Force
          mvn -v
          mvn clean package
        '''
      }
    }
	
	stage('Build and Push Docker Image') {
     environment {
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          // Build the image via PowerShell
          powershell '''
            docker build -t "$env:DOCKER_IMAGE" .
          '''
          // Push using Docker Pipeline helper (works on Windows as long as Docker CLI is available)
          def img = docker.image(env.DOCKER_IMAGE)
          docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
            img.push()
          }
        }
      }
    }

    
    
  }
}
